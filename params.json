{"name":"Kisschema","tagline":"ReactJS PropType-inspired schemas for plain old JS objects.","body":"\r\n##KISSchema\r\n\r\nReactJS propType-inspired schemas for plain old JS objects.\r\n\r\n###Example:\r\n```javascript\r\n\r\nimport { types, validate } from 'kisschema'\r\n\r\nvar emailType = types.custom({ \r\n  validate: (str) => /.@./.test(str),\r\n  makeErrorMessage: (ctx, str) => `Error ${ctx.prop}: '${str}' doesn't really look like an email, dude`\r\n})\r\n\r\nvar userSchema = {\r\n  name: types.string.isRequired,\r\n  email: emailType.isRequired,\r\n  age: types.number,\r\n  friends: types.arrayOf(userSchema)\r\n}\r\n\r\nvalidate(userSchema, {\r\n  name: 'Brendan',\r\n  email: 'brendan@example.com',\r\n  friends: [ { name: 'Allison', email: 'allison@example.com' } ]\r\n}) // => passes.. returns null\r\n\r\nvalidate(userSchema, {\r\n  name: 'Brendan',\r\n  email: 'brendan@example.com',\r\n  friends: [ { name: 'Allison', email: 'allison@example.com' } ]\r\n}) // => passes.. returns null\r\n\r\nvalidate(userSchema, {\r\n  name: 'Brendan',\r\n  email: 'brendan@example.com',\r\n  friends: [ 1 ]\r\n}) // => fails.. returns array of error messages about incorrect friends array\r\n\r\n```\r\n\r\nTypes includes all those present in [React.PropTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation), with the exception of React-specific types: node and element.\r\n\r\nIn addition, our custom type is a bit more involved, requiring validate and error message functions:\r\n\r\n```javascript\r\nvar shoutType = types.custom({\r\n  validate: (val) => types.string.validate(val) && /!$/.test(val),\r\n  makeErrorMessage: (ctx, val) => `Huh, ${ctx.prop} should really have been shouted.`\r\n})\r\n```\r\n\r\n###API\r\n\r\n* types.string\r\n* types.number\r\n* types.bool\r\n* types.func\r\n* types.array\r\n* types.object\r\n* types.oneOf\r\n* types.oneOfType\r\n* types.shape\r\n* types.arrayOf\r\n* types.objectOf\r\n\r\n*any of the above types can be followed with .isRequired*\r\n\r\n* validate(schema, obj, opts={})\r\n  * returns null if passes, or an array of error messages if doesn't pass\r\n  * ```opts``` can include the following props\r\n    * ```failFast``` - Stops validating on the first error\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}